# These substitutions allow the end user to override certain values
substitutions:
  name: "Window Actuator"

esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: esphome.window-actuator
    version: "1.0"

esp8266:
  board: d1_mini

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://Malte-D/esphome-window-actuator/window-actuator-template-esp8266.yaml@main
  import_full_config: true

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  ap:
    password: "3Kn4l7U6bUG4"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:


##########################################################
# Most projects should not remove anything from above here
# and should just modify the name, project name/version 
# and git url for the dashboard_import
##########################################################


servo:
  - id: servo_movement
    output: pwm_output
    auto_detach_time: 5s
    min_level: 2.5%
    max_level: 12.5%
    transition_length: 2s
  - id: servo_handle
    output: pwm_output_2
    auto_detach_time: 5s
    min_level: 2.5%
    max_level: 12.5%
    transition_length: 3s

output:
  - platform: esp8266_pwm
    id: pwm_output
    pin: D1
    frequency: 50 Hz
  - platform: esp8266_pwm
    id: pwm_output_2
    pin: D3
    frequency: 50 Hz

switch:
  - platform: gpio
    pin:
      number: D2
      mode: 
        output: true
    id: relay

cover:
  - platform: template
    id: window
    device_class: window
    name: "Window"
    open_action:
      - then:
          - switch.turn_on: relay
          - cover.template.publish:
              id: window
              current_operation: OPENING
          - servo.write:
              id: servo_handle
              level: -72%
          - delay: 3s
          - servo.write:
              id: servo_movement
              level: 68%
          - delay: 3s
          - switch.turn_off: relay
          - cover.template.publish:
              id: window
              state: OPEN
    close_action:
      - then:
          - switch.turn_on: relay
          - cover.template.publish:
              id: window
              current_operation: CLOSING
          - servo.write:
              id: servo_movement
              level: -100%
          - delay: 3s
          - servo.write:
              id: servo_handle
              level: 65%
          - delay: 3s
          - switch.turn_off: relay
          - cover.template.publish:
              id: window
              state: CLOSED
    stop_action:
      - switch.turn_off: relay
    optimistic: true

