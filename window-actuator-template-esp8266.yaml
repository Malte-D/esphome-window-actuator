# These substitutions allow the end user to override certain values
substitutions:
  name: "window-actuator"

esphome:
  name: "${name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: malte-d.window-actuator
    version: "1.1.2"

esp8266:
  board: d1_mini

# To be able to get logs from the device via serial and api.
logger:

# API is a requirement of the dashboard import.
api:

# OTA is required for Over-the-Air updating
ota:
  platform: "esphome"

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://Malte-D/esphome-window-actuator/window-actuator-template-esp8266.yaml@main
  import_full_config: false

wifi:
  # fast_connect: true
  ap:
    password: "3Kn4l7U6bUG4"

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device.
captive_portal:

improv_serial:


##########################################################
# Most projects should not remove anything from above here
# and should just modify the name, project name/version 
# and git url for the dashboard_import
##########################################################
output:
  - platform: esp8266_pwm
    id: pwm_output
    pin: D1
    frequency: 50 Hz
  - platform: esp8266_pwm
    id: pwm_output_2
    pin: D3
    frequency: 50 Hz

servo:
  - id: servo_movement
    output: pwm_output
    auto_detach_time: 5s
    min_level: 2.5%
    max_level: 12.5%
    transition_length: 2s
    restore: true
  - id: servo_handle
    output: pwm_output_2
    auto_detach_time: 5s
    min_level: 2.5%
    max_level: 12.5%
    transition_length: 3s
    restore: true

switch:
  - platform: gpio
    pin:
      number: D2
      mode: 
        output: true
    id: relay
  - platform: template
    id: maintenance_mode
    optimistic: true
    name: "Maintenance Mode"
    on_turn_on:
      - number.set:
          id: servo_movement_open_adjust
          value: !lambda 'return id(servo_movement_open_position);'
      - number.set:
          id: servo_movement_close_adjust
          value: !lambda 'return id(servo_movement_close_position);'
      - number.set:
          id: servo_handle_open_adjust
          value: !lambda 'return id(servo_handle_open_position);'
      - number.set:
          id: servo_handle_close_adjust
          value: !lambda 'return id(servo_handle_close_position);'
      - number.set:
          id: servo_handle_fully_open_adjust
          value: !lambda 'return id(servo_handle_fully_open_position);'

globals:
  - id: servo_movement_open_position
    type: float
    restore_value: true
    initial_value: '68.0'
  - id: servo_movement_close_position
    type: float
    restore_value: true
    initial_value: '-100.0'
  - id: servo_handle_open_position
    type: float
    restore_value: true
    initial_value: '-72.0'
  - id: servo_handle_close_position
    type: float
    restore_value: true
    initial_value: '65.0'
  - id: servo_handle_fully_open_position
    type: float
    restore_value: true
    initial_value: '0'

number:
  - platform: template
    id: servo_movement_open_adjust
    name: "Servo Movement Open Position"
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    mode: box
    entity_category: config
    set_action:
      then:
        - globals.set:
            id: servo_movement_open_position
            value: !lambda 'return x;'

  - platform: template
    id: servo_movement_close_adjust
    name: "Servo Movement Close Position"
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    mode: box
    entity_category: config
    set_action:
      then:
        - globals.set:
            id: servo_movement_close_position
            value: !lambda 'return x;'

  - platform: template
    id: servo_handle_open_adjust
    name: "Servo Handle Open Position"
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    mode: box
    entity_category: config
    set_action:
      then:
        - globals.set:
            id: servo_handle_open_position
            value: !lambda 'return x;'

  - platform: template
    id: servo_handle_close_adjust
    name: "Servo Handle Close Position"
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    mode: box
    entity_category: config
    set_action:
      then:
        - globals.set:
            id: servo_handle_close_position
            value: !lambda 'return x;'

  - platform: template
    id: servo_handle_fully_open_adjust
    name: "Servo Handle Fully Open Position"
    min_value: -100
    max_value: 100
    step: 1
    optimistic: true
    mode: box
    entity_category: config
    set_action:
      then:
        - globals.set:
            id: servo_handle_fully_open_position
            value: !lambda 'return x;'
            

cover:
  - platform: template
    id: window
    device_class: window
    name: "Window"
    open_action:
      - if:
          condition:
            lambda: 'return !id(maintenance_mode).state;'
          then:
              - switch.turn_on: relay
              - cover.template.publish:
                  id: window
                  current_operation: OPENING
              - servo.write:
                  id: servo_handle
                  level: !lambda 'return id(servo_handle_open_position);'
              - delay: 3s
              - servo.write:
                  id: servo_movement
                  level: !lambda 'return id(servo_movement_open_position);'
              - delay: 3s
              - switch.turn_off: relay
              - cover.template.publish:
                  id: window
                  state: OPEN
    close_action:
        - if:
            condition:
              lambda: 'return !id(maintenance_mode).state;'
            then:
                - switch.turn_on: relay
                - cover.template.publish:
                    id: window
                    current_operation: CLOSING
                - servo.write:
                    id: servo_movement
                    level: !lambda 'return id(servo_movement_close_position);'
                - delay: 3s
                - servo.write:
                    id: servo_handle
                    level: !lambda 'return id(servo_handle_close_position);'
                - delay: 3s
                - switch.turn_off: relay
                - cover.template.publish:
                    id: window
                    state: CLOSED
    stop_action:
      - switch.turn_off: relay
    optimistic: false


button:
  - platform: template
    name: home
    id: btn_home
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state == false;'
          then:
            - cover.template.publish:
                id: window
                state: CLOSED
  
  - platform: template
    name: manual_handle_open
    id: btn_manual_handle_open
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - servo.write:
                id: servo_handle
                level: !lambda 'return id(servo_handle_open_position);'
  
  - platform: template
    name: manual_handle_close
    id: btn_manual_handle_close
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - servo.write:
                id: servo_handle
                level: !lambda 'return id(servo_handle_close_position);'

  - platform: template
    name: manual_handle_fully_open
    id: btn_manual_handle_fully_open
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - servo.write:
                id: servo_handle
                level: !lambda 'return id(servo_handle_fully_open_position);'

  - platform: template
    name: manual_movement_open
    id: btn_manual_movement_open
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - servo.write:
                id: servo_movement
                level: !lambda 'return id(servo_movement_open_position);'
  
  - platform: template
    name: manual_movement_close
    id: btn_manual_movement_close
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - servo.write:
                id: servo_movement
                level: !lambda 'return id(servo_movement_close_position);'

  - platform: template
    name: relay_on
    id: btn_relay_on
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - switch.turn_on: relay

  - platform: template
    name: relay_off
    id: btn_relay_off
    entity_category: config
    on_press:
      - if:
          condition:
            lambda: 'return id(maintenance_mode).state;'
          then:
            - switch.turn_off: relay
